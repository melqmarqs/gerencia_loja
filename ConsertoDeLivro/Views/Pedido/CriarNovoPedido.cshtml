@using ConsertoDeLivro.Models
@model ConsertoDeLivro.Models.Pedido

@{
    ViewBag.Title = "Criar novo pedido";
    Usuario usuario = Session["Usuario"] as Usuario;
    Endereco end = new Endereco();
}

<link href="~/Content/FormsTelas.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/bumbleblee.js"></script>

@using (Html.BeginForm()) {
    <div class="divForm">
        <label class="lblTitulo">@ViewBag.Title</label>
        <hr />
        <label class="text-danger bold avisotitulo" style="margin-left: 20px;">@ViewBag.MensagemErro</label>

        <div class="infoPedido">
            <div>
                <div class="dados">
                    <div>
                        @Html.LabelFor(model => model.Largura)
                        <span>
                            @Html.TextBoxFor(model => model.Largura, new { @onkeypress = "numeroDecimal(this, event)", @onkeyup = "precoMaterial(this, event)" }) cm
                        </span>
                    </div>
                </div>
                <div class="dados">
                    <div>
                        @Html.LabelFor(model => model.Altura)
                        <span>
                            @Html.TextBoxFor(model => model.Altura, new { @onkeypress = "numeroDecimal(this, event)", @onkeyup = "precoMaterial(this, event)" }) cm
                        </span>
                    </div>
                </div>
                <div class="dados">
                    <div>
                        @Html.LabelFor(model => model.Expessura)
                        <span>
                            @Html.TextBoxFor(model => model.Expessura, new { @onkeypress = "numeroDecimal(this, event)", @onkeyup = "precoMaterial(this, event)" }) cm
                        </span>
                    </div>
                </div>
                <div class="dados">
                    <div>
                        <label>Material</label>
                        @Html.DropDownList("MaterialID", null, htmlAttributes: new { @onchange = "precoMaterial(this)" })
                    </div>
                </div>
                <div class="dados">
                    <div>
                        <label>Autor</label>
                        @Html.TextBoxFor(model => model.AutorLivro, new { @placeholder = "Ex: Machado de Assis", @maxlength = "25", @style = "width: 192px" })
                    </div>
                    <div>
                        <label>Nome do livro</label>
                        @Html.TextBoxFor(model => model.NomeLivro, new { @placeholder = "Ex: Dom Casmurro", @maxlength = "35", @style = "width: 220px" })
                    </div>
                </div>
                <div class="dados">
                    <div>
                        <label>Descrição</label>
                        @Html.TextAreaFor(model => model.Descricao, new { @cols = "50", @rows = "6", @maxlength = "200", @style = "resize: none;" })
                    </div>
                </div>
            </div>
            <div class="infoValor">
                <div class="valor">
                    <span>R$</span>
                    <label id="Valor">0,00</label>
                    <input name="Valor" hidden />
                </div>
                <div class="pag">
                    <span>Formas de pagamento:</span>
                    <div class="opcoesPag">
                        <ul>
                            <li>PIX</li>
                            <li>Dinheiro</li>
                            <li>Cartao de Credito</li>
                            <li>Cartao de Debito</li>
                        </ul>
                    </div>
                    <div class="infoPag">
                        <span class="glyphicon glyphicon-info-sign"></span>
                        <span class="att bold">Atenção</span>
                        <span class="text-danger bold">O pagamento é realizado na retirada do material.</span>
                        <span class="text-danger bold">O valor pode sofrer alterações.</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="aviso">
            <label class="avisotitulo">Aviso importante!</label>
            <label>
                Após realizar o seu pedido, o mesmo ficará com o status "Aguardando". Quando o status mudar para "Confirmado". Você precisará levar o seu livro ao endereço abaixo:
                <br />
                @end.getEndCurto()
                @Html.ActionLink("Mapa", "Contato", "ConsertoDeLivro", null, new { @target="_blank" })
            </label>
        </div>

        <hr />
        <div class="divBtns">
            @if (usuario != null) {
                <input type="submit" value="Fazer pedido" class="btn btn-success" />
            } else {
                TempData["Orcamento"] = Model;
                @Html.ActionLink("Criar uma conta", "Criar", "Usuario", null, new { @class = "btn btn-success" })
            }

            @Html.ActionLink("Cancelar", "Index", "ConsertoDeLivro", null, new { @class = "btn btn-danger" })
        </div>
    </div>
}

